---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tabemap-api
  namespace: default
  labels:
    app: tabemap-api
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tabemap-api
  template:
    metadata:
      labels:
        app: tabemap-api
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      restartPolicy: Always
      priorityClassName: monitoring
      containers:
        - name: tabemap-api
          image: "kanatakita/tabemap-api:latest"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          env:
            - name: TZ
              value: Asia/Tokyo
            - name: LOG_MIN_LEVEL
              value: info
            - name: GIN_MODE
              value: release
        - name: mysql  # TODO
          image: "mysql:5.7.26"
          ports:
            - name: mysql
              protocol: TCP
              containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: tabemap
---
apiVersion: v1
kind: Service
metadata:
  name: tabemap-api
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: tabemap-api
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tabemap-api
  namespace: default
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    kubernetes.io/ingress.class: "nginx"
    nginx.org/server-snippet: "proxy_ssl_verify off;"
spec:
  tls:
  - hosts:
    - tabemap.kanatakita.com
    secretName: application
  rules:
  - host: tabemap.kanatakita.com
    http:
      paths:
      - path: /api
        backend:
          serviceName: tabemap-api
          servicePort: 8080
